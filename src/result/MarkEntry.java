/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package result;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import result.ENTRY_TABLE.myException;

/**
 *
 * @author Admin
 */
public class MarkEntry extends javax.swing.JInternalFrame {

    /**
     * Creates new form MarkEntry
     */
    String comboBox1text;
    String comboBox2text;
    String comboBox3text;
    String comboBox4text;
    public MarkEntry() {
        initComponents();
        cb1();
    }
     public void cb1(){
        try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection connect = DriverManager.getConnection( "jdbc:mysql://localhost:3306/result" ,"root" , "root");
        PreparedStatement statement = connect.prepareStatement("select distinct CourseName from result");
        ResultSet resultSet = statement.executeQuery();
        while(resultSet.next()){
            jC1.addItem(resultSet.getString("CourseName"));
        }
        }catch(Exception e){
            System.out.println("Error"+e.getMessage());
        }
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        std = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jC1 = new javax.swing.JComboBox<>();
        jC2 = new javax.swing.JComboBox<>();
        jC3 = new javax.swing.JComboBox<>();
        jC4 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        txt2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txt3 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt4 = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setMinimumSize(new java.awt.Dimension(571, 417));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mark Entry Updation");

        std.setBackground(new java.awt.Color(0, 204, 204));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Course Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Semister");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Subject Name");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Roll no");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 0, 153));
        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jC1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC1ActionPerformed(evt);
            }
        });

        jC2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jC2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC2ActionPerformed(evt);
            }
        });

        jC3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jC3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC3ActionPerformed(evt);
            }
        });

        jC4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("External Mark:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Internal Mark:");

        txt1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt1ActionPerformed(evt);
            }
        });
        txt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt1KeyTyped(evt);
            }
        });

        txt2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt2KeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("External Marks");

        jLabel15.setText("(max)");

        txt3.setEditable(false);
        txt3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Internal Marks");

        jLabel17.setText("(max)");

        txt4.setEditable(false);

        javax.swing.GroupLayout stdLayout = new javax.swing.GroupLayout(std);
        std.setLayout(stdLayout);
        stdLayout.setHorizontalGroup(
            stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stdLayout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(stdLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stdLayout.createSequentialGroup()
                        .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(112, 112, 112)
                        .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jC1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jC2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jC3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jC4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(stdLayout.createSequentialGroup()
                        .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(stdLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stdLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(stdLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(txt2)
                                .addGap(18, 18, 18))
                            .addGroup(stdLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(txt4)))))
                .addGap(73, 73, 73))
        );
        stdLayout.setVerticalGroup(
            stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stdLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jC2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jC3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jC4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(stdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(std, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(std, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC1ActionPerformed
        // TODO add your handling code here:
        int itemCount = jC2.getItemCount();
        for(int i=0;i<itemCount;i++){
            jC2.removeItemAt(0);
        }
        //fill second combo box
        comboBox1text = String.valueOf(jC1.getSelectedItem());
        if (!comboBox1text.isEmpty() || comboBox1text != null) {
            // get data from DataBase with Distinct

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/result","root","root");
                //String sql =;
                PreparedStatement ps = con.prepareStatement("select distinct Semister from result WHERE CourseName = '" + comboBox1text + "'");
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    jC2.addItem(rs.getString("Semister"));
                }
            } catch(Exception e) {
                System.out.println("Error:"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jC1ActionPerformed

    private void jC2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC2ActionPerformed
        // TODO add your handling code here:
        int itemCount = jC3.getItemCount();
        for(int i=0;i<itemCount;i++){
            jC3.removeItemAt(0);
        }
        //fill second combo box
        comboBox2text = String.valueOf(jC2.getSelectedItem());
        if (!comboBox2text.isEmpty() || comboBox2text != null) {
            // get data from DataBase with Distinct
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/result","root","root");
                //String sql =;
                PreparedStatement ps = con.prepareStatement("select distinct SubjectName from result WHERE Semister = '" + comboBox2text + "'");
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    jC3.addItem(rs.getString("SubjectName"));
                }
            } catch(Exception e) {
                System.out.println("Error:"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jC2ActionPerformed

    private void jC3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC3ActionPerformed
        // TODO add your handling code here:
                int itemCount = jC4.getItemCount();
        for(int i=0;i<itemCount;i++){
            jC4.removeItemAt(0);
        }
        //fill second combo box
        comboBox3text = String.valueOf(jC3.getSelectedItem());
        if (!comboBox3text.isEmpty() || comboBox3text != null) {
            // get data from DataBase with Distinct
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/result","root","root");
                PreparedStatement ps1 = con.prepareStatement("select SubName,External,Internal from subject where SubName='"+comboBox3text +"'");
                PreparedStatement ps = con.prepareStatement("select distinct Roll_no from result WHERE SubjectName = '" + comboBox3text + "'");
                ResultSet rs1=ps1.executeQuery();
                if(rs1.next()){            
                    txt3.setText(String.valueOf(rs1.getString("External")));
                    txt4.setText(String.valueOf(rs1.getString("Internal")));
               }
                ResultSet rs = ps.executeQuery();              
                while(rs.next()){
                    jC4.addItem(rs.getString("Roll_no"));                    
                }
            } catch(Exception e) {
                System.out.println("Error:"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jC3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String cname=jC1.getSelectedItem().toString();
        String sem=jC2.getSelectedItem().toString();
        String sub=jC3.getSelectedItem().toString();        
        String sub1=null;
        if(txt1.getText().isEmpty() && txt2.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Fill all the content!");
        }else{
            int roll=Integer.parseInt(jC4.getSelectedItem().toString());
            int ex=Integer.parseInt(txt1.getText());
            int in=Integer.parseInt(txt2.getText());
            int to=(ex + in);          
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/result","root","root");
                PreparedStatement ps = con.prepareStatement("select * from subject WHERE SubName = '"+sub+"'");
                ResultSet rs=ps.executeQuery();
                if(rs.next()){
                   sub1=rs.getString("subType");
                }
            }catch(Exception e) {
                    System.out.println("Error:"+e.getMessage());
            }
            Connection con=null;
            PreparedStatement pst1=null;           
            try{ 
                Class.forName("com.mysql.jdbc.Driver");
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/result","root","root"); 
                con.setAutoCommit(false);
                PreparedStatement pst=con.prepareStatement("select Credits,External,Internal,Total from subject where subName='"+sub +"'");
                ResultSet rs=pst.executeQuery();
                if(rs.next()){
                    int credit=Integer.parseInt(rs.getString("Credits"));                
                    int external=Integer.parseInt(rs.getString("External"));
                    int internal=Integer.parseInt(rs.getString("Internal"));
                    int total=Integer.parseInt(rs.getString("Total"));               
                    int Egrade=(int)((ex*100.00)/external);                 
                     if((ex>external) || (internal<in) || (total<to)){
                        throw new myException("enter marks greater the total marks!");
                    }                   
                    String externalgrade=null; 
                   if(Egrade > 79){
                        externalgrade="O";   

                    }else if((Egrade<80) && (Egrade>69)){
                        externalgrade="A+";

                    }else if(Egrade<70&& Egrade>59){
                        externalgrade="A";

                    }else if(Egrade<60 && Egrade>54){
                        externalgrade="B+";

                    }else if(Egrade<55 && Egrade>49){
                        externalgrade="B";

                    }else if(Egrade<50 && Egrade>44){
                        externalgrade="C";

                    }else if(Egrade<45 && Egrade>39){
                        externalgrade="D";

                    }else if(Egrade<40){

                        externalgrade="F";                  
                   }

                    int igrade=(int)((in*100.00)/internal); 

                    String internalgrade=null; 

                    if(igrade > 79){
                        internalgrade="O";   

                    }else if((igrade<80) && (igrade>69)){
                        internalgrade="A+";

                    }else if(igrade<70&& igrade>59){
                        internalgrade="A";

                    }else if(igrade<60 && igrade>54){
                        internalgrade="B+";

                    }else if(igrade<55 && igrade>49){
                        internalgrade="B";

                    }else if(igrade<50 && igrade>44){
                        internalgrade="C";

                    }else if(igrade<45 && igrade>39){
                        internalgrade="D";

                    }else if(igrade<40){

                        internalgrade="F";                  
                   }
                    int gradepoint=0;
                    int grade=(int)((to*100.00)/total); 

                    String totalgrade=null; 

                    if(grade > 79){
                        totalgrade="O";   
                        gradepoint=10;
                    }else if((grade<80) && (grade>69)){
                        totalgrade="A+";
                        gradepoint=9;
                    }else if(grade<70&& grade>59){
                        totalgrade="A";
                        gradepoint=8;
                    }else if(grade<60 && grade>54){
                        totalgrade="B+";
                        gradepoint=7;
                    }else if(grade<55 && grade>49){
                        totalgrade="B";
                        gradepoint=6;
                    }else if(grade<50 && grade>44){
                        totalgrade="C";
                        gradepoint=5;
                    }else if(grade<45 && grade>39){
                        totalgrade="D";
                        gradepoint=4;
                    }else if(grade<40){
                        totalgrade="F";   
                        gradepoint=0;
                   }
                    int CG=(credit*gradepoint);  
                    if(in==0){
                         internalgrade="--";
                    }
                    pst1=con.prepareStatement("update result set External=?,Externalgrade=?,Internal=?,InternalGrade=?,Total=?,TotalGrade=?,Gradepoints=?,CG=? where CourseName='"+cname+"' and Semister='"+sem+"' and SubjectName='"+sub+"' and Roll_no="+roll+"");
                        pst1.setInt(1, ex);
                        pst1.setString(2, externalgrade);
                        pst1.setDouble(3, in);
                        pst1.setString(4, internalgrade);
                        pst1.setInt(5, to);
                        pst1.setString(6, totalgrade);
                        pst1.setInt(7, gradepoint);
                        pst1.setInt(8, CG);  
                        pst1.executeUpdate();
                        JOptionPane.showMessageDialog(this,"Mark Entry updated successfully!"); 
                }
                                
       }catch(myException e){
            try {
                con.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(ENTRY_TABLE.class.getName()).log(Level.SEVERE, null, ex1);
            }
            JOptionPane.showMessageDialog(this,e.getMessage());  
       }
        catch(Exception e){
            System.out.println(e);
       }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt1KeyTyped
        // TODO add your handling code here:
        char i=evt.getKeyChar();
           if((i< '0' || i >'9') && i!='\b'){
                evt.consume();
                jLabel9.setText("* Only numbers are allowed");
            }else{
                jLabel9.setText("");
            }
    }//GEN-LAST:event_txt1KeyTyped

    private void txt2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt2KeyTyped
        // TODO add your handling code here:
        char i=evt.getKeyChar();
           if((i< '0' || i >'9') && i!='\b'){
                evt.consume();
                jLabel9.setText("* Only numbers are allowed");
            }else{
                jLabel9.setText("");
            }
    }//GEN-LAST:event_txt2KeyTyped

    private void txt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jC1;
    private javax.swing.JComboBox<String> jC2;
    private javax.swing.JComboBox<String> jC3;
    private javax.swing.JComboBox<String> jC4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel std;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt2;
    private javax.swing.JTextField txt3;
    private javax.swing.JTextField txt4;
    // End of variables declaration//GEN-END:variables
class myException extends Exception 
{ 
    public myException(String s) 
    { 
        super(s); 
    } 
} 
}

